"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetupWizardGateway = void 0;
const common_1 = require("@nestjs/common");
const websockets_1 = require("@nestjs/websockets");
const bash_color_1 = require("bash-color");
const ws_admin_guard_1 = require("../../core/auth/guards/ws-admin-guard");
const logger_service_1 = require("../../core/logger/logger.service");
const backup_service_1 = require("../backup/backup.service");
let SetupWizardGateway = class SetupWizardGateway {
    constructor(backupService, logger) {
        this.backupService = backupService;
        this.logger = logger;
    }
    async doRestore(client) {
        try {
            return await this.backupService.restoreFromBackup(client);
        }
        catch (e) {
            this.logger.error(e);
            client.emit('stdout', `\n\r${(0, bash_color_1.red)(e.toString())}\n\r`);
            return new websockets_1.WsException(e);
        }
    }
    async doRestoreHbfx(client) {
        try {
            return await this.backupService.restoreHbfxBackup(client);
        }
        catch (e) {
            this.logger.error(e);
            client.emit('stdout', `\n\r${(0, bash_color_1.red)(e.toString())}\n\r`);
            return new websockets_1.WsException(e);
        }
    }
};
exports.SetupWizardGateway = SetupWizardGateway;
__decorate([
    (0, websockets_1.SubscribeMessage)('do-restore'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", Promise)
], SetupWizardGateway.prototype, "doRestore", null);
__decorate([
    (0, websockets_1.SubscribeMessage)('do-restore-hbfx'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", Promise)
], SetupWizardGateway.prototype, "doRestoreHbfx", null);
exports.SetupWizardGateway = SetupWizardGateway = __decorate([
    (0, common_1.UseGuards)(ws_admin_guard_1.WsAdminGuard),
    (0, websockets_1.WebSocketGateway)({
        namespace: '/backup',
        allowEIO3: true,
        cors: {
            origin: ['http://localhost:8080', 'http://localhost:4200'],
            credentials: true,
        },
    }),
    __metadata("design:paramtypes", [backup_service_1.BackupService,
        logger_service_1.Logger])
], SetupWizardGateway);
//# sourceMappingURL=setup-wizard.gateway.js.map