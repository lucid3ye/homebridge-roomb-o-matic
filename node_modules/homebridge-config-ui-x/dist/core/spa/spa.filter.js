"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpaFilter = void 0;
const node_path_1 = require("node:path");
const node_process_1 = __importDefault(require("node:process"));
const common_1 = require("@nestjs/common");
const fs_extra_1 = require("fs-extra");
let SpaFilter = class SpaFilter {
    catch(_exception, host) {
        const ctx = host.switchToHttp();
        const req = ctx.getRequest();
        const res = ctx.getResponse();
        if (req.url.startsWith('/api/') || req.url.startsWith('/socket.io') || req.url.startsWith('/assets')) {
            return res.code(404).send('Not Found');
        }
        const file = (0, fs_extra_1.readFileSync)((0, node_path_1.resolve)(node_process_1.default.env.UIX_BASE_PATH, 'public/index.html'), 'utf-8');
        res.type('text/html');
        res.header('Cache-Control', 'no-cache, no-store, must-revalidate');
        res.header('Pragma', 'no-cache');
        res.header('Expires', '0');
        res.send(file);
    }
};
exports.SpaFilter = SpaFilter;
exports.SpaFilter = SpaFilter = __decorate([
    (0, common_1.Catch)(common_1.NotFoundException)
], SpaFilter);
//# sourceMappingURL=spa.filter.js.map